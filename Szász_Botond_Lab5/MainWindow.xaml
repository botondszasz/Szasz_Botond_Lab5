<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Szász_Botond_Lab5"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Szász_Botond_Lab5.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key ="BigRedButton" TargetType="Button">
            <Setter Property = "FontSize" Value ="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property = "Width" Value = "100"/>
            <Setter Property = "Background" Value = "Red"/>
            <Setter Property = "Foreground" Value = "Black"/>
        </Style>
        <Style x:Key ="BlackGB" TargetType="GroupBox">
            <Setter Property = "Background" Value = "Black"/>
            <Setter Property="BorderBrush" Value="AntiqueWhite"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
        <Style x:Key ="GreenGB" TargetType="GroupBox">
            <Setter Property = "Background" Value = "ForestGreen"/>
            <Setter Property="BorderBrush" Value="MediumPurple"/>
            <Setter Property="BorderThickness" Value="3"/>
        </Style>
        <Style x:Key ="BigPurpleButton" TargetType="Button">
            <Setter Property = "FontSize" Value ="12"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property = "Width" Value = "100"/>
            <Setter Property = "Background" Value = "Purple"/>
            <Setter Property = "Foreground" Value = "White"/>
        </Style>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid DataContext="{StaticResource customerViewSource}">
        <GroupBox x:Name="gbOperations" Style="{StaticResource BlackGB}" Button.Click="gbOperations_Click" Header="" Margin="0,61,677.6,259">
            <StackPanel x:Name="spOperations" HorizontalAlignment="Left" Height="90" Margin="10,10,-12,-22.4" VerticalAlignment="Top" Width="106">
                <Button x:Name="btnAdd" Style="{StaticResource BigRedButton}" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnAdd_Click"/>
                <Button x:Name="btnEdit" Style="{StaticResource BigRedButton}" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnEdit_Click"/>
                <Button x:Name="btnDelete" Style="{StaticResource BigRedButton}" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnDelete_Click"/>
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="gbActions" Style="{StaticResource GreenGB}" Header="" HorizontalAlignment="Left" Height="108" VerticalAlignment="Top" Width="116" Margin="0,252,0,0">
            <StackPanel x:Name="spActions" HorizontalAlignment="Left" Height="61" Margin="10,21,-6,0" VerticalAlignment="Top" Width="100">
                <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnSave_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BigPurpleButton}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=firstNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                </Button>
                <Button x:Name="btnCancel" Style="{StaticResource BigPurpleButton}" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnCancel_Click"/>
            </StackPanel>
        </GroupBox>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="400" VerticalAlignment="Top" Width="668" Margin="116,10,0,0">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" Margin="0,0,-0.6,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="52*"/>
                        <ColumnDefinition Width="15*"/>
                        <ColumnDefinition Width="14*"/>
                        <ColumnDefinition Width="251*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="10,52,98.2,218" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="1" Grid.ColumnSpan="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="66.4,241,0,0" VerticalAlignment="Top" Height="97" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="36.533"/>
                            <ColumnDefinition Width="5.067"/>
                            <ColumnDefinition Width="34.943"/>
                            <ColumnDefinition Width="52.6"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,4,0,3.8" Grid.Row="0" VerticalAlignment="Center" Grid.ColumnSpan="3"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="3" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4.8" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False" Grid.ColumnSpan="2"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3.2,0,2.8" Grid.Row="1" VerticalAlignment="Center" Grid.ColumnSpan="3"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="3" HorizontalAlignment="Left" Height="24" Margin="3.2,4.2,0,3.8" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3.2,0,2.8" Grid.Row="2" VerticalAlignment="Center" Grid.ColumnSpan="3"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="3" HorizontalAlignment="Left" Height="24" Margin="3.2,4.2,0,3.8" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="76"  Grid.Column="3" Margin="327.4,183,0,0"/>
                    <Button x:Name="btnPrevious" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="3" Grid.Column="1" Margin="10,183,0,0" />
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="19*"/>
                        <ColumnDefinition Width="750*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource inventoryViewSource}}" Margin="99,51,95.4,216" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIDColumn" Binding="{Binding CarID}" Header="Car ID" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" DataContext="{StaticResource inventoryViewSource}" HorizontalAlignment="Left" Margin="232,246,0,0" VerticalAlignment="Top" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIDTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button x:Name="btnNextI" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="476,200,0,0" Grid.Column="1"/>
                    <Button x:Name="btnPreviousI" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="99,200,0,0" Grid.Column="1"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5">
                    <ComboBox x:Name="cmbCustomers" SelectedValue="{Binding ElementName=ordersDataGrid,Path=SelectedItem.CustId,Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Margin="107,52,0,0" Height="22">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" SelectedValue="{Binding ElementName=ordersDataGrid,Path=SelectedItem.CarId,Mode=OneWay}" Margin="452,52,90.4,298" RenderTransformOrigin="0.313,0.75">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True" Margin="119,188,90.4,75">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
